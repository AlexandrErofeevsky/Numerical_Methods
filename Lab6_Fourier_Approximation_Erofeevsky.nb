(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    115717,       2117]
NotebookOptionsPosition[    114299,       2085]
NotebookOutlinePosition[    114671,       2101]
CellTagsIndexPosition[    114628,       2098]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
1.3.2 \:041d\:0430\:0438\:043b\:0443\:0447\:0448\:0435\:0435 \:0441\:0440\
\:0435\:0434\:043d\:0435\:043a\:0432\:0430\:0434\:0440\:0430\:0442\:0438\:0447\
\:0435\:0441\:043a\:043e\:0435 \:043f\:0440\:0438\:0431\:043b\:0438\:0436\
\:0435\:043d\:0438\:0435. \:0427\:0430\:0441\:0442\:043d\:0430\:044f \:0441\
\:0443\:043c\:043c\:0430 \:0440\:044f\:0434\:0430 \:0424\:0443\:0440\:044c\
\:0435.\
\>", "Chapter",
 CellChangeTimes->{{3.7929101976817884`*^9, 3.792910260537223*^9}, {
  3.7964595986394196`*^9, 3.7964596307998047`*^9}, {3.797084552826507*^9, 
  3.797084583269597*^9}},ExpressionUUID->"1fef4c4e-1259-4f64-9078-\
bc23746a15df"],

Cell[CellGroupData[{

Cell["\:0412\:044b\:043f\:043e\:043b\:043d\:0438\:043b \:0415\:0440\:043e\
\:0444\:0435\:0435\:0432\:0441\:043a\:0438\:0439 \:0410\:043b\:0435\:043a\
\:0441\:0430\:043d\:0434\:0440", "Subsection",
 CellChangeTimes->{{3.792910267153539*^9, 3.7929102936308603`*^9}},
 FontColor->GrayLevel[
  0],ExpressionUUID->"0966ff5b-ec56-47e7-ab48-df1d706d4edd"],

Cell["\<\
\:0414\:0430\:043d\:043e: fun - \:043d\:0430\:0447\:0430\:043b\:044c\:043d\
\:0430\:044f \:0444\:0443\:043d\:043a\:0446\:0438\:044f, n - \:0441\:0442\
\:0435\:043f\:0435\:043d\:044c \:0430\:043f\:043f\:0440\:043e\:043a\:0441\
\:0438\:043c\:0430\:043d\:0442\:0430, l - \:0434\:043b\:0438\:043d\:0430 \
\:043e\:0442\:0440\:0435\:0437\:043a\:0430\
\>", "Text",
 CellChangeTimes->{{3.796458774454544*^9, 3.7964587861368465`*^9}, 
   3.7964588188658533`*^9, {3.7964596441107183`*^9, 3.796459652164956*^9}, {
   3.7964596875736237`*^9, 3.796459702167776*^9}, {3.7964597402223825`*^9, 
   3.7964597403301344`*^9}, {3.7970845975586166`*^9, 3.797084613657652*^9}, {
   3.7970848962170863`*^9, 
   3.7970849247642155`*^9}},ExpressionUUID->"7f70fbe1-1d3a-40a2-94fd-\
783b1f99b9e7"],

Cell[BoxData[{
 RowBox[{"Clear", "@", "fourier"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fourier", "[", 
   RowBox[{"fun_", ",", "n_", ",", "l_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"Integrate", "[", 
      RowBox[{"fun", ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "l"}], ",", "l"}], "}"}]}], "]"}], 
     RowBox[{"2", "l"}]], "+", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"N", "[", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"Integrate", "[", 
           RowBox[{
            RowBox[{"fun", "*", 
             RowBox[{"Cos", "[", 
              RowBox[{"k", "*", "Pi", "*", 
               FractionBox["x", "l"]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"-", "l"}], ",", "l"}], "}"}]}], "]"}], "l"], "*", 
         RowBox[{"Cos", "[", 
          RowBox[{"k", "*", "Pi", "*", 
           FractionBox["x", "l"]}], "]"}]}], "+", 
        RowBox[{
         FractionBox[
          RowBox[{"Integrate", "[", 
           RowBox[{
            RowBox[{"fun", "*", 
             RowBox[{"Sin", "[", 
              RowBox[{"k", "*", "Pi", "*", 
               FractionBox["x", "l"]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"-", "l"}], ",", "l"}], "}"}]}], "]"}], "l"], "*", 
         RowBox[{"Sin", "[", 
          RowBox[{"k", "*", "Pi", "*", 
           FractionBox["x", "l"]}], "]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "//", 
   "FullSimplify"}]}]}], "Input",
 CellChangeTimes->{{3.796745066014844*^9, 3.796745326365548*^9}, {
  3.796745472012492*^9, 3.7967454748147306`*^9}, {3.797084412736493*^9, 
  3.797084418593769*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"63178d6e-f65c-44b6-a79e-6ebc4cf732b1"],

Cell["\:0420\:0435\:0437\:0443\:043b\:044c\:0442\:0430\:0442", "Text",
 CellChangeTimes->{{3.797084636043423*^9, 3.7970846458616037`*^9}, {
  3.7970854252104034`*^9, 
  3.7970854270051947`*^9}},ExpressionUUID->"55c8d235-2e0e-40f3-9691-\
a4837cd971d1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ex", "=", 
   RowBox[{"fourier", "[", 
    RowBox[{
     SuperscriptBox["x", "2"], ",", "10", ",", 
     RowBox[{"2", "Pi"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7967453070857105`*^9, 3.796745362393819*^9}, 
   3.796745443899891*^9, {3.7967455021097126`*^9, 3.7967455068886557`*^9}, {
   3.7967455714522395`*^9, 3.7967456374460373`*^9}, {3.7970844224036236`*^9, 
   3.7970844431468415`*^9}, {3.797084740542423*^9, 3.79708474182467*^9}, {
   3.7970847752401185`*^9, 3.7970847836049824`*^9}, 3.7970854302404456`*^9, {
   3.797733582660429*^9, 3.7977336232812314`*^9}, {3.797733669517202*^9, 
   3.7977337432908626`*^9}, {3.797733790170087*^9, 3.7977338350440216`*^9}, 
   3.7982937564163785`*^9, 3.7982937907295833`*^9},
 CellLabel->
  "In[105]:=",ExpressionUUID->"ee7cd9af-c7c5-46cf-9c73-e098d78343e8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{"ex", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "8"}], ",", "8"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<ex\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     SuperscriptBox["x", "2"], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "8"}], ",", "8"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<\!\(\*SuperscriptBox[\(x\), \(2\)]\)\>\"", "}"}]}]}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.796745365558133*^9, 3.7967454333336697`*^9}, {
  3.7967455308522944`*^9, 3.796745564535679*^9}, {3.797084657541029*^9, 
  3.79708466905713*^9}, {3.797084708685097*^9, 3.7970847659362955`*^9}, {
  3.7970849725329514`*^9, 3.797084989727493*^9}, {3.797085434426244*^9, 
  3.7970854362954707`*^9}, {3.7977336314473267`*^9, 3.7977336429455976`*^9}, {
  3.7977337449632297`*^9, 3.7977337457475243`*^9}, {3.7977338427700624`*^9, 
  3.7977338468030896`*^9}, {3.7982937481557565`*^9, 3.798293814116623*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"04f435ff-4ba6-41b7-aa55-b83a1dbce1ff"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1: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
fkP6TGJE1JE1ubt9KAGOuEoI2pGJSNJCR0yz/BPo2Rj+GtxJRGpdzQpBX+KB
ol2vWbafiN6u7B1tyoqFdODgOHCEiPinxpjVqmKgbq9aZbQyEU0+ZY6lTEYD
55ZCFRd1Igr8MhHsoxcFsuuLm7OaRHTNjCIdFRYJ6hMKRdcvEZG63ZR8YF8E
mHfcs2/QJ6Lnj7u9rEPDwf3Hp8MnjYnI7ETfKu/9MIjNHZhPv0lE3/v9Ppfo
hkLpJ7EMyTtENFo10ZN3IQQ23H3l6OyIqPCOyzELpyAQfVQ79uAZEWVdzuV0
ywiEY2aET70viMgtAK/lL34Ew0uqZhfciMjvyv0DR899hKcqTlLU10TEFFxY
tjctAAIU8nv2viei2JKX6hVSAZAluRAS7kdEu9itfGSj/aGRW96AK5iIxvf8
POW9zx9mN+4KvoggIsGf771IP/yAZyru159YIrr7WeoL430/2Nvd53MtkYjO
b97++ULMD85Xi2jVpNHiXYq8XNriC3cL9DiUvxJR4sm7jYQgX/BM/FCZnE+r
Lzv9lv9NX/gUVO0uiml6hjRZJh70hW+erKe8K4ioby6H04/LF4aeqNCtVxFp
75F9VTF/KMBg4VhkWU9EdmFWhP2NFJDUy7XvbCYiVcflgPACCpw4/ffwuU5a
vB0/tl/8TIFrinsX8vto8+elXGleMAWeb7uTITtCRMifQ/PiewoE88Y+CJ4g
Irqwk11BHhTIpe+VY5+l6W2SQpZwpkDLDGn82SItnkl61WMHCsz36n4aWyOi
+oSmH+gpBfjq3psZ0JNQ4L8ryTsfU2B/cZXUDxYS6nO/3tZnRwHtFObeI5wk
pB6aUilH4/uhKDRhKwklMLqcaLWlgPcbBwOiEIm2jiy7+9/32Yn22YKeoiTk
bbiF67/z5x93Zn8tSZHQ6L70//0+e1Rf7oPFThLKbfbk+K+dRd1Cq1WOhNCv
KL3//LcfjuY4s5+E/J6Erf53Pq0i3V2ZfZiE6j9M7Pyvf1MBooe0Mo3DmsN7
aezEdOlUgAoJdZ23fb+Dln/437d0LOokJKofaa1Mq69woLLokSYJ6cfy1T6k
1d/RwOgwrEPz9yneQqTps4xPHLmsT8tnV7ScD00/wfRnC+XXSCj0rZatKk3f
gxFZGYo3ae3WZ8ifafrrvpt+EHub5t/wTvA4bXxsHGX38N+n1X8izNyNNn4+
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
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$17606#1"]& ]}}, {}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJw1mOk7FGzfgK1Zw4hKMWMp2bKFUvG7lCQ1M5FQZLtvKUqSRGRLkiJJIYoo
S9kpS8M11siWPbtk39cwkfd5j+N5Pp1/wHmcX04J2xtGdixMTEyCzExM/09F
2D6xuUmiO3ortG5uUtGNNamgNQaJbvyZ0rW4TEVZuSrSi8sk+u1sZ9fxSSpS
lSHbjkyS6Lbzuf92dlDRQUJAV10HiT4ReVC9LpOK0K/5b9GZJHqCz4GXG1ZU
ZPSw/uMBKxKdVrhh+rSUgu40Bly3LyHSX//o7nJ6REatrTwTpTZi9As37EUv
MgyQGP2G0EFRUbqAZKCuR7Y++uRYwc7fu4vuMzzsqxSih6yfqMx1+ovQX+h1
Rj420UWr4Z5BGHbSw+QunSZaH0OJfH0iUT+30+N5zz6yt0Ao1kDFpeWRMJ2h
l3na6e9R5H/Nxl32lBCdHlBzUKNAE3myfrjjMi1IV/ULtmL/VwPZ+DbuaU8h
0C/wO3+g3TuAXhQPR8U6CNBvcOeEb3Yoo6J+Gd40ST660D1WGRkbBSQlgI4Z
v+GhqykXhGm170M5ckEOg7846fwZ5+/KWUih/spscQ2NLXSB9PWHdW1ENKzw
QhV/ZqUnt9Zb7jfYiQjeqRqKzMx0MS9XA39BQRT4WaZaYIWJLjsXmMS5QUCM
meQLi1NMdJ3p6LqYUQIatEryKvjBRI/zL3UboxFQjk5i2bEsJjrvrh3Hd18h
ICP21xRTKyZ69p/uLyN0AbRPRKKeyXMTnxWKNpdb5UMKGrMK7xfXsVvyM+l4
FW50WdHHp7B3HfNN+E+zcXOjOGn+5vqv67hu7gPt4SAXEtyhdOd3zDrGBnG3
Rp9zoZUVp9KTuuvYS1lEl3+VE5UVzpyfiPiDzcoNbzBVcSAzrRlvJQ0Gfral
feaKOzsKV/duOi7OwEINcbRQY3ZUu59vjxk3AxdfiA9vVmZH2kTFGt++NRxY
fMI0b5wNSW1e39YcuIZnP0scH7BgQzP06WTXjlUseZP4vlOfFd3Xnf5e6L6C
uVnlw40OMqMy/Smq2j8rWCJ3tKRhBzNiIk82ZJBX8GOGc5/9KhPyOj9elyi5
gm2o48tzhUzI7fJwdUjdb8xPuBloqc2ErgT10m3Ef+OWsUJzSvRfOFNXn8VV
vYSPuJ1R6N1gQPD3OqWAnCX85ePkIcEqBlS31mb8jV3CI/x75P1CGXCityZt
8eYSRv9a03nFGaA9U5nSu3sJzx7lyOg6sQbKAiXx2TcWMTVj60vD2BUQNs4I
u7BjAROebUR9dF2CHOnHRSdYF3DGFN/TSyeX4Oya/ZDK7Dym7fMd09m1BMFv
JA5xf53Hokf9K9/SF+HvWER/kds8Zu1jkynhX4SRe56Kou1z2HEL29Or+fPg
RH0WVSw7i8ktLTXCF2YgZclg6gXzLGa6PBMiyDMDg9FsyKlzBofmV+90LZ4G
k6E7o8RHMxgiaf52UtMAHpYavmPTeE7/bTLz0iQIJMq3Hkuewg9uW6qTUsYh
53clf/WeCeyzmGw9az4MoR8SyrTXxnGzLuUqh/AwOFr63P5UP44NnULGXjQM
wZ6qQ90JbuP426l2g+3Hh+Dli49J96rHcKZk+Jt3Kr/grtozrQPXRvFJixz/
lT0/wWTs+lwqGsVqyiNLbsMDcCDWIFFceBSTe3J6ryUNwBQrGxdfyQheo23f
RpMdAMsWt9Yx/hEcjAi7vjv2wTEXC8c3uUPYuFfWc6q6C4jSmkThoCFsG5ym
WmTWBX86hZseWwzhqlHrDtfxTsjTadTwYB/CgbmWY1lbO0GacIzF2PQXngzN
kNG16QDurH3RXH9+Yur5OMkOtVZ43z0cMh7Qh1l0glcu7a6HLq/tca8P9OGJ
98W1u/zqgI94MstwsBerm8vnuI7Vgpt1SnMh9OKVz58+bX75BnrDDjuCGd1Y
+UBgpItbNYzNzMbLOXdiF+3tVbWHKkA0TDynj9iJX6fOFF8oKIezKobl4fU/
8H475uoAzXIouJUzzJD7gT3q2wRzUBk8WnWVqx1ux1W2h+9ftaWDHAsj19G8
FV9Ew68jRwrBMlGuksTdig9LDbSeFymEcF3z9paCFvwriapMoRYAI5C2emR7
Cw4Ne2I8XfEZanl8tHibmjBl+p7RcHsuMKVnUug+TditXSzdVSoX1CgDVq6K
Tfgfa1UF7Vs5EBum49/z+DuOMimM9BHNhh9ynKEXQhpwc9Q9fXf5dEDXr2aV
TtTjpDscJzRXP0JK5rdmWf16zBN1N9ip9gN4qIXsYLDU4eDXonPqD1Jgl7bg
21fuNfj8F6r0Ib134O97q5ylvRrnJEk5xOglwmRZ67DDgWqc0DLw24WcALST
kXJHZqqw2sL2SW+neLhkKJrX/U8FNggY8hJaj4apxWXN2xXlOGUr/3uWa1Hg
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
UrpERf/9Ieh/P+T/ADsyb8Q=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$17662#1"]& ]}}, {}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-8, 8}, {0., 9.488934946872137}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"ex\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)\""}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.796745386766617*^9, 3.796745449182666*^9}, 
   3.796745490914755*^9, {3.79674552322071*^9, 3.79674564202602*^9}, {
   3.797084752912014*^9, 3.797084787012395*^9}, {3.7970849795610743`*^9, 
   3.7970849905583863`*^9}, 3.7970854375557847`*^9, {3.79773359716741*^9, 
   3.79773363396284*^9}, {3.7977336720532103`*^9, 3.7977337462782135`*^9}, {
   3.797733795383274*^9, 3.7977338531316795`*^9}, 3.7982937441656303`*^9, 
   3.798293784851617*^9, 3.7982938150226912`*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"42bf9577-cff9-42fd-9d72-d5d3413f55bc"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "@", "f2"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", "[", "x_", "]"}], ":=", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "x", "]"}], "2"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ex2", " ", "=", " ", 
   RowBox[{"fourier", "[", 
    RowBox[{
     RowBox[{"f2", "[", "x", "]"}], ",", "5", ",", "Pi"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.797733777807201*^9, 3.797733785635953*^9}, {
  3.797733863742879*^9, 3.7977338687992797`*^9}, {3.7977339090672565`*^9, 
  3.7977339091797085`*^9}, {3.7982938629763784`*^9, 3.798293893321596*^9}, {
  3.798293942842002*^9, 3.798293953227672*^9}, {3.79829457337505*^9, 
  3.798294583845786*^9}, {3.7982946171938524`*^9, 3.798294617553934*^9}, {
  3.798294648809227*^9, 3.798294661334245*^9}, {3.7982948727749653`*^9, 
  3.7982949774378605`*^9}},
 CellLabel->
  "In[168]:=",ExpressionUUID->"37e2b616-0ccd-49a5-8328-1eaf426772ee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{"ex2", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "8"}], ",", "8"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", " ", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\"\<ex\>\"", "}"}]}]}], "]"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"f2", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "8"}], ",", "8"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{
       "{", "\"\<Sin[x\!\(\*SuperscriptBox[\(]\), \(2\)]\)\>\"", "}"}]}]}], 
     "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7977338779977684`*^9, 3.7977338811209745`*^9}, {
   3.797733918571619*^9, 3.797733919634528*^9}, 3.798293870977455*^9, {
   3.798293901246029*^9, 3.798293932407993*^9}, 3.798294611049806*^9, 
   3.7982949357291555`*^9, 3.7982949907171154`*^9},
 CellLabel->
  "In[173]:=",ExpressionUUID->"3cd040e5-26ba-49cc-9418-d8f303e88454"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1: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
VQ/ImtZ+fD+CiB+fNx/jdQPTQLoBg3dEXI5DennXLZgVrdLmSSXqv7mdcGTr
Orz8FBz9N5fIH2r6alrYEfYfM16M/Uawr222eOp/8LeTx8yhmuA5K7vm0xfB
MPRym1sTwRayQcKfLKDkYLHNg06CDa//YWkzA+VRrqHnwwS3+rqFPz8B8VH/
XYufJtiAy2WM6SiQ9QpnslYJXp5S/iSlAQ/nODy/MbBipNFfRZKFisT3pt3m
Ly6CefwnfpEEwdH0y8MOIYIxLsH05nntjk029jFpgklYvs+rUG2jjxefLykR
jOzTsV2b2qVW+YJMBwhWcbjNkikKqmyssXw6/4/nfPTSUIbEwgsyO04QXNJP
U3XXBIEruemqZwjufksx8taFIH5mVewiwdFT0iGnjGG1wqrA5CrBF/enGned
huuuOYcv3CbYkG4k9t956JZirLzmw4r5/5d25+cpWzD9fd7Q6zHBbKzX/UTs
odwnqyHoOTG+4My19mOOxL2F/tyrt0Q8X4zjW/t1SO4415WUxIphs/mfmUZd
IPTAtvHyIoL1TmgWu7nD5tAZl8YKYr5qr5d04F1weZm+2FPHiiHz3lmvn95g
PnOafqOPFevVdnZonr0PVXGpweyTrJjtjaxY+Z4HoGGywS2yyIrFR3/ZZjD4
CMQyksUOsLFh8RIfXudrhED4+bUEPT42rDdJ2Hn4cRiQWEwVzCWI+BOF3Exa
OAzar6jf2suG8XxpCbNmiICzFJMSPy02DCWM3KdZv4DqsoQj4fpsmOnqhTuZ
ZS/ho4TRyQxLNsz23lS9f/YrkKqLbymyJxgZfXqk8QYi7i1YVTuzYVg2b+jT
umhwb4t1HApgw54xLv4NFo0F7YiZ+5IZbFhqqYf4UkIC5GD6LMqf2TD5UW6F
lagPIE2LDtfC2TCWo9ciGp8lApOR7tvzf4h+RB5kTkYmw2/GV/kv1tgwjekR
EBhKB9u7WiPMRuzYqLHTyWCDXFC0r26hnmXHggy21dRv5MKciXllix3Bck+Y
tL/kQaDM9fcfPNgxI+VlvYcqnyHz91sr+MCOxV8QOMlnWAgrsmu/3VfZsTCf
0yWiHDiU8zwuvcDIgYmNJx46PoND2Br5oy4PwTrSMvHXCY9uVAwhy3Fgw27q
DIUWZaDvbambdYoD44gYPcOmUwERTUWFQ6kcmPODQDHKyR9g/U0vpTaPAzMp
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
2TIMyNCPr7CqKNTr3hG5TpWBZ2EhSwtqKVybWvZ1gz4DfuNWKftfURiqEz77
hQnx36rJxzfaKUyfH78n7BADqesrjXTfU1huyat/QPz3wM3YF819FIpy3223
Jf77/JhGj/w4hYUzL2ZMiV8ENIt75H8h49eUCQoh/qGHjaI93yiMdt+Wb5rK
QPoiT5lrUjTu409/ss4nfuMHNzVlaExrun2aX8yA/EcZ5TeLaAwTJIT4VjEQ
XHh/w0Kaxuiruq78N8Q/lf0qc5RpzJIvq51FfGoiwnznrrU0Ok+ef/ee+FbG
F8W20fU05uj97G3Uy4DjoaEj0do08od6HFQGiX/WFTLrN9IYc/RYwKURBhq1
Lvk2II0bL3zI8hpnIOyO9ewTxjQmpXm9aPtE/FBqTbSMOY31NdyyKhEDIi8R
O2sXjdP6rSc1iF8+aK++t30fjaKDvIZlxD+dfr+hNnyQ9Fc/rzqa+Cn1wKno
iiONFhLaFoHEX5sVdIxVXWg0tg869IlwRODsxrrjNErlyYkGCG8RNtm4e9NY
oqO/2OHH+a9VWp+0D40HRgwL95F4eU+9vTL8Sb5os/FX0wy4r9k8bRZM49bN
7jV1U8S3YxeGDoTTuGlDorkp6W/b9Hu58CgaK3WLrhqT8cQ45SSujiPz8eVK
7rMxBkxfBayqSaCxzLWoumaY+La+Ra5zEo36HU1j5gMMPE6lDSTTaVQS37Zn
N/Fbj/lMdXomjTrNXks6OhlYeabE0jiHRgkP/8MfWxl41x3xrvcRjXsTLrqd
fs3Ata22LhcFNM4762sXUseAeZ7qhHI5mY8OVR67koFZ1LRfZTWpn2oiVBcw
cHIsIXbWGxp5o7fHhjIYWGvjRqW20ihz7OjPUcRv31du+Muok+T7zo9+dIMB
i/jWkj8GaOTEVq6+FsiAlATfbDlDo7liVvfWMww8dT/TVDpJ44Zb6ntD3Rng
vTW2d5ii0dZ7e5+ZPQP/u78M/39/2X8Br/d1UQ==
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$71839#1"]& ]}}, {}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
w7P3EmAl/GEADoKoqv3R41ORyTAqWjqhq07kK7ndvPNnCrQlMRrWqwgihxtx
DF/XUiG3KIynW14QSexVyhx9kAEOA5+j1siCSCj+1v6i/77AoHJLuuqYAArQ
bKkWP50Pzd+FuH4MCKDLTy/qcPAXANK5ele7WwDdW86yZBgqgJhLE6rnmwVQ
feWm1lpAEZg9psGdigXQfda2HL2lH1DfqNiU9lIAkXP1dlill0GxufPBg8EC
6Bhr3Wy8XDmkDeVHFD0TQGP8bM6qSeUQsHLc/LeHADr149BN9cQKOCF5aXDE
RgCtiKZxWORUQoHjs8WdRwSQaZji9xcMNfCJs0fobT8/2mhIZ7c90gzhFsB0
pIsfMT2u95D3bwbf5LiFjjaipfaa5DVqbYZrx/9rEKnlRz+7+ta/OP8BKdex
p7Hf+NHZzYFTSV9aIL57jpoUzI8Yzg4n6mr+hbh0psqvqvzoPbLM2+PbBdH6
ys5/AvnQu0l+0ytvBkGaTb+68Skf+vrv+wXrkkFIq7kmVe/Dh9ZqU9sMhweh
yOB1c9V9PnQnrye468AQ8XlaPlBizYdcnX4e+FY7BPznf8wnH+FDmt+FVAPW
huGFxan73uO8qCY/SkJLbQz4Ra/VPRziRU53rzYHmY9BTJeHzINeXuS93ioQ
5zkGmVfSW++18qJvb4Po96AxqL3KdehmKS8aKzlwPkF7HJhtWpfOv+NF03/2
VXofn4CX0hSjc695UXy621VJ6wkQGGb8bPSCF/U87Gx55DMBsrZqF08940UN
yxvmD79PgI7d+3zNu7xIbNbb+vj+SfC9be0uf4oXfTXee8qDfQp6Qi2ji07w
ojulIY0jclOg/sUCndbkRSdPP4pe1Z6CucULzA4HeVGRDH8Vp+cUWPvov80R
40XdGOet/uEpKP54sviEIC86dkyB1n57CgQrtPtaSMT6mvszwwWnoZEZ5JaZ
eJEbx4nrpaemAQs/WHB0joxWj3AmP/o8DdF5+7tqp8jIbWhZfenHNKy07aWx
HCUjNtVL1xlbpiFbRE7vURcZGa4eWJkn+j+JRNH2ikoyskiu2zFP9Icev4Q2
LpSS0T2WpN2K/1GgbZxfcvQ7GT3Sqtu5TvSToUo8dixfyEg8ecrejOg/t/IZ
VgzfkxFvx++hHT0UMO+kFe2NICO66xKK/6Yp8G1jG5xeklHMgoWeLtHPOmit
+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
xjkqfHMuZT3fuwSRV3MVIq9QgVHtlgbGugysZo4KyS5UyBTGWr9JLENEtp1L
kA8VTDd5HfaqLsN3Jv19m4FUSCoriRW2WoYdqQJN4R+oYJT4Si3s/jIYKbAr
fCV8uORv18QUvAzHOTe7bAkf6hiS6Ba/LsPMjqxzboQHQ61ZZld/L8OX7+sn
zSup0H6fpnerexk68ne7dtZSYWfQci3d3DIY9nvlLjdTwT6GUsTMuAJjuXkd
X9qpkJsznMwhvAIHFakVzD2Efyu7IklKK7D1+cf5jQFivn9/ngocX4Ef+eI3
QkaJ+ajVzqKmK5Dd5zNQQPjnL12Z1U77FWg4U5L2mPCRpGChkaz3Ctz32p02
QnjRXjFbQyF8BX6WPqgZJbyYi33esz9pBVDH0OpTwosbJjGCqkUrIHaFVbZk
jfDVzQhG9foVKJPe0npFePGFV8iC5sAKLH/UPU5P+K497MnAiaUVOCbbLcZD
+G9nkkejHusqdIso1RcSsX3R3RJD8VVg3Cd0ZouIc+vt0o0PrELejdmYHiLe
GLgadVF3FWRVvErMiVhn2TTgsvkq7LBZynYm8oeyGblaOxDXeVk9ZQk/tkvo
2Nj6roJUcPtuV8KPO1U0jG9FroI242KJNeFHe72DmFPqKji7XTcaJ/yYd3mP
0v2SVXhxMH6YfYEKm047RT2aVyEpLCKydoZY3zNBVp+RVcjxeH9fbppY3zuu
lSdrq7B74tE7yXFivgzGkQDONZC7+kTk6xCRv22hNPzQGhyUoU/LJTyfOzGZ
9UZ/DRQU9yyLEX7c2Br4EG25Bkqi38VlCD+G7m56kOS3BqZCkm9Zy4jnc7Tq
RlrUGojJ02qMFxHP5yx+ITtzDaxkbl69nkvkc89QLmpbg4Sr9oOHPhH5QhIk
8Ik1wBvNUkKiiHo/vueo2FoDZmHnwkdhRH2/A8frZNdht/LOD9rexP3Cth/7
Xdch6t5z9ePnif3cd+XFSNA6VHnuZgk7SdRzwsRrMmadOOcv5B8dJfbv9vFL
i5XrwHvG/CUmReT/Ic7DIrABwrzbNcaTFHjRxLfNobAB46dLKeldFGgfZie6
mA1IfZpGk1pHAXvO9SrRGxvQxaB5OzSTuP/q30f78zfAcaVIje028X6Y0oCR
2g1w14xoYb5EAe8H8ZvvBzZgvxLtr2gdCji8uuPBxLkJxuaFlEAxChj9onPp
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
f3/ZfwG1I8Hu
           "]]}, 
         Annotation[#, "Charting`Private`Tag$71895#1"]& ]}}, {}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-8, 8}, {0., 0.9999998978108715}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"ex\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"Sin[x\\!\\(\\*SuperscriptBox[\\(]\\), \\(2\\)]\\)\""}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7977338950299487`*^9, 3.797733921634801*^9}, {
  3.7982939205399594`*^9, 3.7982939548687534`*^9}, {3.7982946129976187`*^9, 
  3.798294663746784*^9}, {3.7982948907275167`*^9, 3.798294937403949*^9}, {
  3.798294980185956*^9, 3.7982950071270466`*^9}},
 CellLabel->
  "Out[173]=",ExpressionUUID->"d6ba2445-1895-45e6-a3c9-b0e88729c2b8"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 976},
WindowMargins->{{-9, Automatic}, {Automatic, -9}},
Magnification:>2. Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 644, 11, 230, "Chapter",ExpressionUUID->"1fef4c4e-1259-4f64-9078-bc23746a15df"],
Cell[CellGroupData[{
Cell[1249, 37, 348, 5, 106, "Subsection",ExpressionUUID->"0966ff5b-ec56-47e7-ab48-df1d706d4edd"],
Cell[1600, 44, 780, 13, 68, "Text",ExpressionUUID->"7f70fbe1-1d3a-40a2-94fd-783b1f99b9e7"],
Cell[2383, 59, 1894, 53, 398, "Input",ExpressionUUID->"63178d6e-f65c-44b6-a79e-6ebc4cf732b1"],
Cell[4280, 114, 251, 4, 68, "Text",ExpressionUUID->"55c8d235-2e0e-40f3-9691-a4837cd971d1"],
Cell[4534, 120, 850, 16, 87, "Input",ExpressionUUID->"ee7cd9af-c7c5-46cf-9c73-e098d78343e8"],
Cell[CellGroupData[{
Cell[5409, 140, 1323, 29, 131, "Input",ExpressionUUID->"04f435ff-4ba6-41b7-aa55-b83a1dbce1ff"],
Cell[6735, 171, 40440, 724, 523, "Output",ExpressionUUID->"42bf9577-cff9-42fd-9d72-d5d3413f55bc"]
}, Open  ]],
Cell[47190, 898, 926, 20, 161, "Input",ExpressionUUID->"37e2b616-0ccd-49a5-8328-1eaf426772ee"],
Cell[CellGroupData[{
Cell[48141, 922, 1129, 28, 131, "Input",ExpressionUUID->"3cd040e5-26ba-49cc-9418-d8f303e88454"],
Cell[49273, 952, 64986, 1128, 513, "Output",ExpressionUUID->"d6ba2445-1895-45e6-a3c9-b0e88729c2b8"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

